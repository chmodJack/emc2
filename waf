#! /usr/bin/env python
# vim : set fileencoding=utf-8 expandtab noai ts=4 sw=4 filetype=python :
VERSION="1.9.1"

def err(m):
    print(('\033[91mError: %s\033[0m' % m))
    sys.exit(1)

def which(program):
    import os
    def is_exe(fpath):
        return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

    fpath, fname = os.path.split(program)
    if fpath:
        if is_exe(program):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            path = path.strip('"')
            exe_file = os.path.join(path, program)
            if is_exe(exe_file):
                return exe_file
    return None

def waf():
    import os
    import sys
    import inspect
    import subprocess

    src = os.path.abspath(inspect.getfile(inspect.getmodule(err)))
    base, name = os.path.split(src)
    wafdir = os.path.abspath(os.path.join(base, ".waf"))

    if not os.path.isdir(wafdir):
        git = which("git")
        if not git:
            err("git not found in the path, please install.")
        subprocess.call([git, 'subtree', 'add', '--prefix', '.waf', 'https://github.com/waf-project/waf.git', 'master'])
        #subprocess.call([git, "clone", "https://github.com/waf-project/waf.git", "-b", "waf-%s" % VERSION, wafdir])

    if not os.path.isdir(os.path.join(wafdir, "waflib")):
        err("waflib-Folder not present in %s." % wafdir)
        return False

    sys.path.insert(0, wafdir)
    from waflib import Scripting
    return Scripting.waf_entry_point(os.getcwd(), VERSION, wafdir)

def main():
    import os
    import sys
    import inspect
    src = os.path.abspath(inspect.getfile(inspect.getmodule(err)))
    base, name = os.path.split(src)
    sys.path.insert(0, base)

    from core.tools import repository
    commands = {
        "repo": repository.execute
    }
    if len(sys.argv) > 1 and sys.argv[1] in commands:
        commands[sys.argv[1]](base)
    else:
        waf()

if __name__ == "__main__":
    main()
